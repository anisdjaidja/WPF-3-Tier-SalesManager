<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">




  <Style x:Key="ImageCell" TargetType="DataGridCell">
    <Style.Triggers>
      <!--  Highlight selected rows  -->
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
    </Style.Triggers>
    <!--  Add some padding around the contents of a cell  -->
    <Setter Property="Height" Value="35" />
    <Setter Property="Width" Value="35" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridCell">
          <Grid>
            <Grid.OpacityMask>
              <VisualBrush Visual="{Binding ElementName=brdr}" />
            </Grid.OpacityMask>
            <Border
              x:Name="brdr"
              Width="30"
              Height="30"
              Margin="1"
              VerticalAlignment="Center"
              BorderBrush="{DynamicResource MainBorder}"
              BorderThickness="0"
              CornerRadius="30">
              <Border.Clip>
                <RectangleGeometry
                  RadiusX="30"
                  RadiusY="30"
                  Rect="0,0,30,30" />
              </Border.Clip>
              <ContentPresenter />
            </Border>
          </Grid>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="Control">
          <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="NameCell" TargetType="DataGridCell">
    <Style.Triggers>
      <!--  Highlight selected rows  -->
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
    </Style.Triggers>
    <!--  Add some padding around the contents of a cell  -->
    <Setter Property="FontSize" Value="13" />
    <Setter Property="FontWeight" Value="Regular" />
    <Setter Property="Padding" Value="8,0" />
    <Setter Property="Height" Value="35" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch" />

    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridCell">
          <Border
            Padding="{TemplateBinding Padding}"
            VerticalAlignment="Center"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="Control">
          <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="QuantityCell" TargetType="DataGridCell">
    <Style.Triggers>
      <!--  Highlight selected rows  -->
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
    </Style.Triggers>
    <!--  Add some padding around the contents of a cell  -->
    <Setter Property="FontWeight" Value="Thin" />
    <Setter Property="FontFamily" Value="/UI/Fonts/#Varela Round" />
    <Setter Property="Padding" Value="8,0" />
    <Setter Property="Height" Value="35" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridCell">
          <Border
            Padding="{TemplateBinding Padding}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="Control">
          <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="BarCodeCell" TargetType="DataGridCell">
    <Style.Triggers>
      <!--  Highlight selected rows  -->
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
    </Style.Triggers>
    <!--  Add some padding around the contents of a cell  -->
    <Setter Property="FontSize" Value="38" />
    <Setter Property="FontFamily" Value="/UI/Fonts/#Libre Barcode 128" />
    <Setter Property="Padding" Value="2,0" />
    <Setter Property="Foreground" Value="{DynamicResource MainBorder}" />
    <Setter Property="Height" Value="35" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridCell">
          <Border
            Padding="{TemplateBinding Padding}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="Control">
          <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="UnwantedValuesCell" TargetType="DataGridCell">
    <Style.Triggers>
      <!--  Highlight selected rows  -->
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
    </Style.Triggers>
    <!--  Add some padding around the contents of a cell  -->
    <Setter Property="FontWeight" Value="Thin" />
    <Setter Property="FontFamily" Value="/UI/Fonts/#Varela Round" />
    <Setter Property="Foreground" Value="Orange" />
    <Setter Property="Padding" Value="8,0" />
    <Setter Property="Height" Value="35" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridCell">
          <Border
            Padding="{TemplateBinding Padding}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="Control">
          <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="WantedValuesCell" TargetType="DataGridCell">
    <Style.Triggers>
      <!--  Highlight selected rows  -->
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
    </Style.Triggers>
    <!--  Add some padding around the contents of a cell  -->
    <Setter Property="FontWeight" Value="Thin" />
    <Setter Property="FontFamily" Value="/UI/Fonts/#Varela Round" />
    <Setter Property="Foreground" Value="Green" />
    <Setter Property="Padding" Value="8,0" />
    <Setter Property="Height" Value="35" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridCell">
          <Border
            Padding="{TemplateBinding Padding}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="Control">
          <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="KeyValuesCell" TargetType="DataGridCell">
    <Style.Triggers>
      <!--  Highlight selected rows  -->
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
    </Style.Triggers>
    <!--  Add some padding around the contents of a cell  -->
    <Setter Property="FontWeight" Value="Thin" />
    <Setter Property="FontFamily" Value="/UI/Fonts/#Varela Round" />
    <Setter Property="Foreground" Value="DodgerBlue" />
    <Setter Property="Padding" Value="8,0" />
    <Setter Property="Height" Value="35" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridCell">
          <Border
            Padding="{TemplateBinding Padding}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="Control">
          <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle
            Width="1"
            Cursor="SizeWE"
            Stroke="Transparent" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="Height" Value="45" />
    <Setter Property="FontWeight" Value="Medium" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="Foreground" Value="{DynamicResource SecondFont}" />
    <Setter Property="Background" Value="{DynamicResource MainSpaceLighter2}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border
              x:Name="BackgroundBorder"
              Grid.ColumnSpan="2"
              Background="Transparent"
              BorderBrush="Transparent"
              BorderThickness="0,0,0,3"
              CornerRadius="0" />
            <ContentPresenter
              Margin="6,3,6,3"
              HorizontalAlignment="Center"
              VerticalAlignment="Center" />
            <Path
              x:Name="SortArrow"
              Grid.Column="1"
              Width="8"
              Height="6"
              Margin="0,0,8,0"
              VerticalAlignment="Center"
              Data="M 0,0 L 1,0 0.5,1 z"
              Fill="Gray"
              RenderTransformOrigin="0.5, 0.4"
              Stretch="Fill"
              Visibility="Collapsed" />
            <Thumb
              x:Name="PART_LeftHeaderGripper"
              HorizontalAlignment="Left"
              Style="{StaticResource ThumbStyle}" />
            <Thumb
              x:Name="PART_RightHeaderGripper"
              Grid.Column="1"
              Style="{StaticResource ThumbStyle}" />

          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="BackgroundBorder" Property="Background" Value="Transparent" />
              <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource MainAccent}" />
            </Trigger>
            <Trigger Property="SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
              <Setter TargetName="SortArrow" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="NameColHeader"
    BasedOn="{StaticResource ColHeaderStyle}"
    TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
  </Style>
  <Style
    x:Key="WantedColHeader"
    BasedOn="{StaticResource ColHeaderStyle}"
    TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Foreground" Value="Green" />
  </Style>
  <Style
    x:Key="UnwantedColHeader"
    BasedOn="{StaticResource ColHeaderStyle}"
    TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Foreground" Value="Orange" />
  </Style>
  <Style
    x:Key="KeyColHeader"
    BasedOn="{StaticResource ColHeaderStyle}"
    TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Foreground" Value="DodgerBlue" />
  </Style>
  <!--  DataGrid  -->
  <Style x:Key="DataGridStyle" TargetType="DataGrid">
    <!--  Make the border and grid lines a little less imposing  -->

    <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
    <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CanUserResizeRows" Value="False" />
    <Setter Property="CanUserDeleteRows" Value="False" />
    <Setter Property="CanUserAddRows" Value="False" />
    <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="SelectionUnit" Value="FullRow" />
    <Setter Property="IsReadOnly" Value="True" />
    <Setter Property="SelectionMode" Value="Single" />
    <Setter Property="FontWeight" Value="Light" />
    <Setter Property="BorderBrush" Value="{DynamicResource Separator}" />
    <Setter Property="BorderThickness" Value="0.8" />
    <Setter Property="Background" Value="{DynamicResource MainSpaceLighter2}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="5"
            SnapsToDevicePixels="True">
            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <DataGridColumnHeadersPresenter
                      x:Name="PART_ColumnHeadersPresenter"
                      Grid.Row="1"
                      Grid.Column="1"
                      Margin="15,0,0,0"
                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <ScrollContentPresenter
                      x:Name="PART_ScrollContentPresenter"
                      Grid.Row="2"
                      Grid.ColumnSpan="2"
                      CanContentScroll="{TemplateBinding CanContentScroll}" />
                    <ScrollBar
                      x:Name="PART_VerticalScrollBar"
                      Grid.Row="2"
                      Grid.Column="2"
                      Maximum="{TemplateBinding ScrollableHeight}"
                      Orientation="Vertical"
                      ViewportSize="{TemplateBinding ViewportHeight}"
                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                      Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Grid Grid.Row="3" Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ScrollBar
                        x:Name="PART_HorizontalScrollBar"
                        Grid.Column="1"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        Orientation="Horizontal"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                        Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="RowHeaderStyle">
      <Setter.Value>
        <Style TargetType="DataGridRowHeader">
          <Setter Property="Visibility" Value="Hidden" />
          <Setter Property="Width" Value="0" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="ColumnHeaderStyle">
      <Setter.Value>
        <Style BasedOn="{StaticResource ColHeaderStyle}" TargetType="{x:Type DataGridColumnHeader}" />
      </Setter.Value>
    </Setter>


    <Setter Property="RowStyle">
      <Setter.Value>
        <Style TargetType="DataGridRow">
          <Setter Property="Background" Value="{DynamicResource MainSpaceLighter2}" />
          <Setter Property="BorderBrush" Value="{DynamicResource MainBorder}" />
          <Setter Property="BorderThickness" Value="0,0.3" />
          <Setter Property="VerticalAlignment" Value="Stretch" />
          <Setter Property="VerticalContentAlignment" Value="Stretch" />
          <Setter Property="Margin" Value="0" />
          <Setter Property="Foreground" Value="{DynamicResource MainFont}" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type DataGridRow}">
                <Grid>
                  <Border
                    x:Name="DGR_Border"
                    Padding="15,0,0,0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="0"
                    SnapsToDevicePixels="True">
                    <SelectiveScrollingGrid>
                      <SelectiveScrollingGrid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </SelectiveScrollingGrid.ColumnDefinitions>
                      <SelectiveScrollingGrid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                      </SelectiveScrollingGrid.RowDefinitions>
                      <DataGridCellsPresenter
                        Grid.Column="1"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        ItemsPanel="{TemplateBinding ItemsPanel}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                      <DataGridDetailsPresenter
                        Grid.Row="1"
                        Grid.Column="1"
                        VerticalAlignment="Stretch"
                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                        Visibility="{TemplateBinding DetailsVisibility}" />
                      <DataGridRowHeader
                        Grid.RowSpan="2"
                        SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    </SelectiveScrollingGrid>
                  </Border>
                  <Border
                    Name="Select_Border"
                    Width="3"
                    HorizontalAlignment="Left"
                    Background="{TemplateBinding Background}" />
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                      <BeginStoryboard>
                        <Storyboard>
                          <DoubleAnimation
                            Storyboard.TargetName="Select_Border"
                            Storyboard.TargetProperty="Width"
                            From="3"
                            To="6"
                            Duration="0:0:0.1" />
                        </Storyboard>
                      </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                      <BeginStoryboard>
                        <Storyboard>
                          <DoubleAnimation
                            Storyboard.TargetName="Select_Border"
                            Storyboard.TargetProperty="Width"
                            From="6"
                            To="3"
                            Duration="0:0:0.1" />
                        </Storyboard>
                      </BeginStoryboard>

                    </Trigger.ExitActions>
                    <Setter TargetName="Select_Border" Property="Background" Value="{DynamicResource MainSpaceDarker2}" />
                  </Trigger>
                  <Trigger Property="IsSelected" Value="true">
                    <Setter TargetName="Select_Border" Property="Background" Value="{DynamicResource MainAccentDarker1}" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <!--  Highlight a grid row as the mouse passes over  -->
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource MainSpaceDarker}" />
              <Setter Property="Foreground" Value="{DynamicResource CellSelectionFont}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="{DynamicResource MainAccentLighter3}" />
              <Setter Property="Foreground" Value="{DynamicResource CellSelectionFont}" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="CellStyle">
      <Setter.Value>
        <Style TargetType="DataGridCell">

          <Style.Triggers>
            <!--  Highlight selected rows  -->
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="Transparent" />
              <Setter Property="BorderBrush" Value="Transparent" />
              <Setter Property="Foreground" Value="{DynamicResource MainFont}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Background" Value="Transparent" />
              <Setter Property="BorderBrush" Value="Transparent" />
              <Setter Property="Foreground" Value="{DynamicResource MainFont}" />
            </Trigger>
          </Style.Triggers>
          <!--  Add some padding around the contents of a cell  -->
          <Setter Property="Padding" Value="8,0" />
          <Setter Property="Height" Value="45" />
          <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
          <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch" />
          <Setter Property="HorizontalAlignment" Value="Stretch" />
          <Setter Property="VerticalAlignment" Value="Stretch" />
          <Setter Property="BorderBrush" Value="Transparent" />
          <Setter Property="BorderThickness" Value="1" />
          <Setter Property="TextBlock.VerticalAlignment" Value="Stretch" />
          <Setter Property="TextBlock.HorizontalAlignment" Value="Stretch" />
          <Setter Property="TextBlock.TextAlignment" Value="Center" />

          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridCell">
                <Border
                  Padding="{TemplateBinding Padding}"
                  VerticalAlignment="Center"
                  Background="Transparent"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
                  <ContentPresenter />
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="FocusVisualStyle">
            <Setter.Value>
              <Style TargetType="Control">
                <Setter Property="BorderBrush" Value="Transparent" />
              </Style>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>