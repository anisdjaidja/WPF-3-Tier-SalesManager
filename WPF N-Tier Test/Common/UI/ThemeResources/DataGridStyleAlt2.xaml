<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">






  <Style x:Key="NameCellAlt2" TargetType="DataGridCell">
    <Style.Triggers>
      <!--  Highlight selected rows  -->
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
      <Trigger Property="IsFocused" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
      </Trigger>
    </Style.Triggers>
    <!--  Add some padding around the contents of a cell  -->
    <Setter Property="FontSize" Value="14" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Padding" Value="8,0" />
    <Setter Property="Margin" Value="15,0,0,0" />
    <Setter Property="Height" Value="40" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />

    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGridCell">
          <Border
            Padding="{TemplateBinding Padding}"
            VerticalAlignment="Center"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="Control">
          <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  DataGrid  -->
  <Style x:Key="DataGridStyleAlt2" TargetType="DataGrid">
    <!--  Make the border and grid lines a little less imposing  -->
    <Setter Property="BorderBrush" Value="#DDDDDD" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
    <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CanUserResizeRows" Value="False" />
    <Setter Property="CanUserDeleteRows" Value="False" />
    <Setter Property="CanUserAddRows" Value="False" />
    <Setter Property="SelectionUnit" Value="FullRow" />
    <Setter Property="SelectionMode" Value="Single" />
    <Setter Property="IsReadOnly" Value="True" />
    <Setter Property="RowHeaderStyle">
      <Setter.Value>
        <Style TargetType="DataGridRowHeader">
          <Setter Property="Visibility" Value="Hidden" />
          <Setter Property="Background" Value="Transparent" />
          <Setter Property="Width" Value="0" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="ColumnHeaderStyle">
      <Setter.Value>
        <Style TargetType="{x:Type DataGridColumnHeader}">
          <Setter Property="Height" Value="0" />
        </Style>
      </Setter.Value>
    </Setter>


    <Setter Property="RowStyle">
      <Setter.Value>
        <Style TargetType="DataGridRow">
          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="Margin" Value="0,3" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type DataGridRow}">
                <Border
                  x:Name="DGR_Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="5"
                  SnapsToDevicePixels="True">
                  <SelectiveScrollingGrid>
                    <SelectiveScrollingGrid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </SelectiveScrollingGrid.ColumnDefinitions>
                    <SelectiveScrollingGrid.RowDefinitions>
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </SelectiveScrollingGrid.RowDefinitions>
                    <DataGridCellsPresenter
                      Grid.Column="1"
                      ItemsPanel="{TemplateBinding ItemsPanel}"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <DataGridDetailsPresenter
                      Grid.Row="1"
                      Grid.Column="1"
                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                      Visibility="{TemplateBinding DetailsVisibility}" />
                    <DataGridRowHeader
                      Grid.RowSpan="2"
                      SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                  </SelectiveScrollingGrid>
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <!--  Highlight a grid row as the mouse passes over  -->
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="#FFF4F4F4" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="Gainsboro" />
            </Trigger>
          </Style.Triggers>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="CellStyle">
      <Setter.Value>
        <Style TargetType="DataGridCell">

          <Style.Triggers>
            <!--  Highlight selected rows  -->
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="Transparent" />
              <Setter Property="BorderBrush" Value="Transparent" />
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Background" Value="Transparent" />
              <Setter Property="BorderBrush" Value="Transparent" />
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
          </Style.Triggers>
          <!--  Add some padding around the contents of a cell  -->
          <Setter Property="Padding" Value="5,0" />
          <Setter Property="Height" Value="40" />
          <Setter Property="HorizontalAlignment" Value="Center" />
          <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
          <Setter Property="BorderBrush" Value="Transparent" />
          <Setter Property="BorderThickness" Value="1" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridCell">
                <Border
                  Padding="{TemplateBinding Padding}"
                  VerticalAlignment="Center"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
                  <ContentPresenter />
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="FocusVisualStyle">
            <Setter.Value>
              <Style TargetType="Control">
                <Setter Property="BorderBrush" Value="Transparent" />
              </Style>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>