<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">

  <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
    <Border
      x:Name="PART_ContentHost"
      Width="{TemplateBinding Width}"
      Margin="4,0,0,0"
      Background="Red"
      Focusable="False" />
  </ControlTemplate>
  <ControlTemplate x:Key="ToggleButtonStyle" TargetType="ToggleButton">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="20" />
      </Grid.ColumnDefinitions>
      <Border
        x:Name="OutsideBorder"
        Grid.ColumnSpan="2"
        Width="0"
        Panel.ZIndex="2"
        BorderBrush="Gray"
        BorderThickness="0.5"
        CornerRadius="5" />
      <Border
        x:Name="Border"
        Grid.ColumnSpan="2"
        Background="White"
        BorderBrush="Gray"
        BorderThickness="0.5"
        CornerRadius="5" />
      <Image
        x:Name="Arrow"
        Grid.Column="1"
        Width="7"
        Height="7"
        Margin="0,0,4,0"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        RenderTransformOrigin=".5,.5"
        Source="/Assets/Tools/comboArrow.png"
        Stretch="Fill">
        <Image.RenderTransform>
          <RotateTransform x:Name="AnimatedRotateTransform" Angle="0" />
        </Image.RenderTransform>
      </Image>



    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ToggleButton.IsChecked" Value="true">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation
                Storyboard.TargetName="AnimatedRotateTransform"
                Storyboard.TargetProperty="Angle"
                From="0"
                To="180"
                Duration="0:0:0.3" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation
                Storyboard.TargetName="AnimatedRotateTransform"
                Storyboard.TargetProperty="Angle"
                From="180"
                To="0"
                Duration="0:0:0.3" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="Border" Property="Background" Value="WhiteSmoke" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="ComboBoxEx" TargetType="ComboBox">
    <Setter Property="IsEditable" Value="False" />
    <Setter Property="IsTextSearchEnabled" Value="False" />
    <Setter Property="MaxDropDownHeight" Value="300" />
    <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
    <Setter Property="StaysOpenOnEdit" Value="True" />
    <Setter Property="Background" Value="White" />
    <Setter Property="Padding" Value="30" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <ToggleButton
              Name="ToggleButton"
              Grid.Column="2"
              Background="White"
              ClickMode="Press"
              Focusable="false"
              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
              Template="{StaticResource ToggleButtonStyle}" />
            <ContentPresenter
              Name="ContentSite"
              Margin="3,3,23,3"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Content="{TemplateBinding SelectionBoxItem}"
              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
              IsHitTestVisible="False" />
            <TextBox
              x:Name="PART_EditableTextBox"
              Margin="30,10"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Background="White"
              Focusable="True"
              IsReadOnly="{TemplateBinding IsReadOnly}"
              Style="{x:Null}"
              Template="{StaticResource ComboBoxTextBox}"
              Visibility="Hidden" />
            <Popup
              Name="Popup"
              AllowsTransparency="True"
              Focusable="False"
              IsOpen="{TemplateBinding IsDropDownOpen}"
              Placement="Bottom"
              PopupAnimation="Slide">
              <Grid
                Name="DropDown"
                MinWidth="{TemplateBinding ActualWidth}"
                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                SnapsToDevicePixels="True">
                <Border
                  x:Name="DropDownBorder"
                  Background="WhiteSmoke"
                  CornerRadius="5" />
                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                </ScrollViewer>
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="Gray" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
              <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
              <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
              <Setter Property="IsTabStop" Value="false" />
              <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
              <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style
    x:Key="{x:Type ComboBoxItem}"
    x:Name="ComboBoxItemStyle"
    TargetType="{x:Type ComboBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="Foreground" Value="#111111" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="FlowDirection" Value="LeftToRight" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border
            Name="Border"
            Padding="5"
            Background="WhiteSmoke"
            SnapsToDevicePixels="true">
            <ContentPresenter />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
              <Setter TargetName="Border" Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="White" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>



</ResourceDictionary>